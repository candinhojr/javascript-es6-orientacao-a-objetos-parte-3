{"version":3,"sources":["../../app-es6/controllers/NegociacaoController copy.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","event","preventDefault","data","Date","value","split","map","item","indice","negociacao","Negociacao","numeros","dobro","num","console","log","somaDoisNumeros","numero1","numero2","doisNumeros","avaliacoes","Prova","Aluno","aprovados","filter","prova","nota","aluno","nome","matricula"],"mappings":";;;;;;;;IAAMA,oB;AAEF,oCAAc;AAAA;;AACV,YAAIC,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAR;;AAEA,aAAKG,UAAL,GAAkBJ,EAAE,OAAF,CAAlB;AACA,aAAKK,gBAAL,GAAwBL,EAAE,aAAF,CAAxB;AACA,aAAKM,WAAL,GAAmBN,EAAE,QAAF,CAAnB;AACH;;;;iCAEQO,K,EAAO;AACZA,kBAAMC,cAAN;;AAEA;AACA;;;;;AAKA;;;;;;AAMA;;;;;;;;;;;;;;AAcA;AACA,gBAAIC,0CAAWC,IAAX,mCACA,KAAKN,UAAL,CAAgBO,KAAhB,CACCC,KADD,CACO,GADP,EAECC,GAFD,CAEK,UAACC,IAAD,EAAOC,MAAP,EAAkB;AACnB,uBAAOD,OAAOC,SAAS,CAAvB;AACH,aAJD,CADA,MAAJ;;AAUA,gBAAIC,aAAa,IAAIC,UAAJ,CACbR,IADa,EAEb,KAAKJ,gBAAL,CAAsBM,KAFT,EAGb,KAAKL,WAAL,CAAiBK,KAHJ,CAAjB;;AAMA,gBAAIO,UAAU,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,EAAR,EAAW,CAAX,EAAa,CAAb,CAAd;AACA,gBAAIC,QAAQD,QAAQL,GAAR,CAAY;AAAA,uBAAOO,MAAM,CAAN,GAAUA,MAAM,CAAhB,GAAoBA,GAA3B;AAAA,aAAZ,CAAZ;AACAC,oBAAQC,GAAR,CAAYH,KAAZ;;AAEA,qBAASI,eAAT,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2C;AACvC,uBAAOD,UAAUC,OAAjB;AACH;;AAED,gBAAIC,cAAc,CAAC,CAAD,EAAG,CAAH,CAAlB;AACAL,oBAAQC,GAAR,CAAY,sBAAsBC,iCAAmBG,WAAnB,CAAlC;;AAIA,gBAAIC,aAAa,CACb,IAAIC,KAAJ,CAAU,IAAIC,KAAJ,CAAU,CAAV,EAAa,OAAb,CAAV,EAAiC,CAAjC,CADa,EAEb,IAAID,KAAJ,CAAU,IAAIC,KAAJ,CAAU,CAAV,EAAa,QAAb,CAAV,EAAkC,CAAlC,CAFa,EAGb,IAAID,KAAJ,CAAU,IAAIC,KAAJ,CAAU,CAAV,EAAa,QAAb,CAAV,EAAkC,CAAlC,CAHa,EAIb,IAAID,KAAJ,CAAU,IAAIC,KAAJ,CAAU,CAAV,EAAa,MAAb,CAAV,EAAgC,CAAhC,CAJa,CAAjB;;AAOA,gBAAIC,YAAYH,WACXI,MADW,CACJ;AAAA,uBAASC,MAAMC,IAAN,IAAc,CAAvB;AAAA,aADI,EAEXpB,GAFW,CAEP;AAAA,uBAASmB,MAAME,KAAN,CAAYC,IAArB;AAAA,aAFO,CAAhB;AAGAd,oBAAQC,GAAR,CAAYQ,SAAZ;AACH;;;;;;IAGCD,K,GAEF,eAAYO,SAAZ,EAAuBD,IAAvB,EAA6B;AAAA;;AACzB,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACH,C;;IAGCP,K,GAEF,eAAYM,KAAZ,EAAmBD,IAAnB,EAAyB;AAAA;;AACrB,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACH,C","file":"NegociacaoController copy.js","sourcesContent":["class NegociacaoController {\n    \n    constructor() {\n        let $ = document.querySelector.bind(document);\n\n        this._inputData = $(\"#data\");\n        this._inputQuantidade = $(\"#quantidade\");\n        this._inputValor = $(\"#valor\");\n    }\n    \n    adiciona(event) {\n        event.preventDefault();\n        \n        //TRABALHANDO COM DATAS\n        /*\n        let data = new Date(this._inputData.value.replace('/-/g', ','));\n        let data = new Date(this._inputData.value.split('-'));\n        */\n\n        /*\n        // usando destructuring\n        let [ano, mes, dia] = this._inputData.value.split('-');\n        let data = new Date(ano, mes-1, dia);\n        */\n\n        /*\n        // usando spread operator\n        let data = new Date(...\n            this._inputData.value\n            .split('-')\n            .map(function(item, indice) {\n                if(indice == 1) return item-1;\n                return item;\n                // ou de uma forma menos verbosa\n                //return item - indice % 2\n            })\n        );\n        */\n            \n        // usando arrow function\n        let data = new Date(...\n            this._inputData.value\n            .split('-')\n            .map((item, indice) => {\n                return item - indice % 2\n            })\n            // sendo menos verboso ainda\n            // .map((item, indice) => item - indice % 2)\n        );\n\n        let negociacao = new Negociacao(\n            data,\n            this._inputQuantidade.value,\n            this._inputValor.value\n        );\n\n        let numeros = [3,2,11,20,8,7];\n        let dobro = numeros.map(num => num % 2 ? num * 2 : num);\n        console.log(dobro);\n\n        function somaDoisNumeros(numero1, numero2) {\n            return numero1 + numero2;\n        }\n\n        let doisNumeros = [2,4];\n        console.log('Soma dois numeros' + somaDoisNumeros(...doisNumeros));\n\n\n        \n        let avaliacoes = [\n            new Prova(new Aluno(1, 'Luana'), 8),\n            new Prova(new Aluno(2, 'CÃ¡ssio'), 6),\n            new Prova(new Aluno(3, 'Barney'), 9),\n            new Prova(new Aluno(4, 'Bira'), 5)\n        ];\n        \n        let aprovados = avaliacoes\n            .filter(prova => prova.nota >= 7)\n            .map(prova => prova.aluno.nome);\n        console.log(aprovados);\n    }\n    \n}\nclass Aluno {\n\n    constructor(matricula, nome) {\n        this.matricula = matricula;\n        this.nome = nome;\n    }\n}\n\nclass Prova {\n\n    constructor(aluno, nota) {\n        this.aluno = aluno;\n        this.nota = nota;\n    }\n}\n"]}