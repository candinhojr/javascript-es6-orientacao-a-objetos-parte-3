{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemAtual","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","apaga","esvazia","Negociacao","DateConverter","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n    \n    constructor() {\n\n        let $ = document.querySelector.bind(document);\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n        this._ordemAtual = ''; // quando a página for carregada, não tem critério. Só passa a ter quando ele começa a clicar nas colunas\n        \n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacoesView($('#negociacoesView')),\n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem'\n        );\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($('#mensagemView')),\n            'texto'\n        );\n\n        this._service = new NegociacaoService();\n\n        this._init();\n    }\n    \n    _init() {\n        \n        this._service\n            .lista()\n            .then(negociacoes => \n                negociacoes.forEach(negociacao => \n                    this._listaNegociacoes.adiciona(negociacao)))\n            .catch(erro => this._mensagem.texto = erro);\n\n        setInterval(() => {\n            this.importaNegociacoes();\n        }, 3000);\n    }\n\n    adiciona(event) {\n\n        event.preventDefault();\n\n        let negociacao = this._criaNegociacao();\n\n        this._service\n            .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem;\n                this._limpaFormulario();\n            })\n            .catch(erro => this._mensagem.texto = erro);\n    }\n\n    importaNegociacoes() {\n\n        this._service\n            .importa(this._listaNegociacoes.negociacoes)\n            .then(negociacoes =>\n                negociacoes.forEach(negociacao => {\n                    this._listaNegociacoes.adiciona(negociacao);\n                    this._mensagem.texto = 'Negociações do período importadas';    \n                })\n            )\n            .catch(erro => this._mensagem.texto = erro);\n    }\n\n    apaga() {\n\n        this._service\n            .apaga()\n            .then(mensagem => {\n                this._listaNegociacoes.esvazia();\n                this._mensagem.texto = mensagem;\n            })\n            .catch(erro => this._mensagem.texto = erro);\n    }\n\n    _criaNegociacao(){\n\n        return new Negociacao(\n            DateConverter.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n\n    _limpaFormulario() {\n        \n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();\n    }\n\n    ordena(coluna) {\n\n        if (this._ordemAtual == coluna) {\n            // invertemos a ordem da coluna\n            this._listaNegociacoes.inverteOrdem();\n        } else {\n            this._listaNegociacoes.ordena((a, b) => a[coluna] -  b[coluna]);\n        }\n        this._ordemAtual = coluna;\n    }\n}\n"]}