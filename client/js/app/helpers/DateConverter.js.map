{"version":3,"sources":["../../app-es6/helpers/DateConverter.js"],"names":["DateConverter","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","reverse","map","item","indice"],"mappings":";;;;;;;;IAAMA,a;AACF,6BAAc;AAAA;;AACV,cAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;AAED;;;;;;;;sCAIqBC,I,EAAM;AACvB,mBAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACH;;AAED;;;;;;;sCAIqBC,K,EAAO;AACxB;AACA,gBAAI,CAAC,wBAAwBC,IAAxB,CAA6BD,KAA7B,CAAL,EACA,MAAM,IAAIL,KAAJ,CAAU,yCAAV,CAAN;AACA;AACA,sDAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,UAACC,IAAD,EAAOC,MAAP;AAAA,uBAAkBD,OAAOC,SAAS,CAAlC;AAAA,aAA/B,CAAnB;;AAGA;;;;;;AAMH","file":"DateConverter.js","sourcesContent":["class DateConverter {\n    constructor() {\n        throw new Error('Esta classe não pode ser instanciada');\n    }\n\n    /**\n     * receberá uma data e a converterá para texto\n     * @param {*} data \n     */\n    static dataParaTexto(data) {\n        return `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`;\n    }\n\n    /**\n     * receberá um texto e o converterá para data\n     * @param {*} texto \n     */\n    static textoParaData(texto) {\n        // mudamos a validação para aceitar o novo formato!\n        if (!/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(texto))\n        throw new Error('A data deve estar no formato dd/mm/aaaa');\n        // veja que usamos no split '/' no lugar de '-'. Usamos `reverse` também para ficar ano/mes/dia.\n        return new Date(...texto.split('/').reverse().map((item, indice) => item - indice % 2));\n\n\n        /* Formato para input do tipo data\n        if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(texto))\n            throw new Error('Deve estar no formato aaaa-mm-dd');\n        else \n            return new Date(...texto.split('-').map((item, indice) => item - indice % 2));\n        */\n    }\n}"]}