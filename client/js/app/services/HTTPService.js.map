{"version":3,"sources":["../../app-es6/services/HTTPService.js"],"names":["HTTPService","res","ok","Error","statusText","url","fetch","then","_handleErros","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;iDAEIC,G,EAAK;;AAEd,4BAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AAEL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,YAAL,CAAkBP,GAAlB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAE,gBAAiB,kBAAnB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,YAAL,CAAkBP,GAAlB,CAAP;AAAA,yBALC,CAAP;AAMH","file":"HTTPService.js","sourcesContent":["export class HTTPService {\n\n    _handleErros(res) {\n\n        if(!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n    get(url) {\n        \n        return fetch(url)\n            .then(res => this._handleErros(res))\n            .then(res => res.json());\n    }\n\n    post(url, dado) {\n\n        return fetch(url, {\n            headers: { 'Content-type' : 'application/json' },\n            method: 'post',\n            body: JSON.stringify(dado)\n        }) \n        .then(res => this._handleErros(res));\n    }\n}"]}